{"version":3,"sources":["webpack:///./src/templates/category.jsx"],"names":["Hero","_styled","target","props","theme","colors","primary","bg","Headline","greyBlue","CatWrapper","Wrapper","withComponent","Category","_ref","category","pageContext","_ref$data$posts","data","posts","nodes","totalCount","location","___EmotionJSX","Layout","SEO","title","website","titleAlt","pathname","Header","id","skipNavId","Title","style","marginTop","Listing"],"mappings":"2KAOMA,EAAIC,YAAA,UAAAC,OAAA,aAAAD,CAAA,qBACY,SAACE,GAAK,OAAKA,EAAMC,MAAMC,OAAOC,UAAO,mDAI9C,SAACH,GAAK,OAAKA,EAAMC,MAAMC,OAAOE,KAAE,MAIvCC,EAAQP,YAAA,KAAAC,OAAA,aAAAD,CAAA,qLAGH,SAACE,GAAK,OAAKA,EAAMC,MAAMC,OAAOI,WAAQ,+DAQ3CC,EAAaC,IAAQC,cAAc,OAAM,CAAAV,OAAA,cA2BhCW,UAzBE,SAAHC,GAAA,IACGC,EAAQD,EAAvBE,YAAeD,SAAQE,EAAAH,EACvBI,KACEC,MAASC,EAAKH,EAALG,MAAOC,EAAUJ,EAAVI,WAElBC,EAAQR,EAARQ,SAAQ,OAERC,YAACC,IAAM,KACLD,YAACE,IAAG,CAACC,MAAK,aAAeX,EAAQ,MAAMY,IAAQC,SAAYC,SAAUP,EAASO,WAC9EN,YAACO,IAAM,MACPP,YAACvB,EAAI,KACHuB,YAACZ,IAAO,KACNY,YAACf,EAAQ,KAAC,YACVe,YAAA,UAAKR,KAGTQ,YAACb,EAAU,CAACqB,GAAIJ,IAAQK,WACtBT,YAACU,IAAK,CAACC,MAAO,CAAEC,UAAW,SACxBd,EAAW,IAAiB,IAAfA,EAAmB,OAAS,QAAQ,IAAiB,IAAfA,EAAmB,MAAQ,OAAO,iBAAeN,EAAS,KAEhHQ,YAACa,IAAO,CAACjB,MAAOC","file":"component---src-templates-category-jsx-c899ebf706d6650eb6b3.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport styled from '@emotion/styled'\nimport { Layout, Listing, Wrapper, Title, SEO, Header } from '../components'\nimport website from '../../config/website'\n\nconst Hero = styled.header`\n  background-color: ${(props) => props.theme.colors.primary};\n  padding-top: 1rem;\n  padding-bottom: 4rem;\n  h1 {\n    color: ${(props) => props.theme.colors.bg};\n  }\n`\n\nconst Headline = styled.p`\n  font-family: 'Source Sans Pro', -apple-system, 'BlinkMacSystemFont', 'Segoe UI', 'Roboto', 'Helvetica', 'Arial',\n    sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\n  color: ${(props) => props.theme.colors.greyBlue};\n  font-size: 1.25rem;\n  a {\n    font-style: normal;\n    font-weight: normal;\n  }\n`\n\nconst CatWrapper = Wrapper.withComponent('main')\n\nconst Category = ({\n  pageContext: { category },\n  data: {\n    posts: { nodes, totalCount },\n  },\n  location,\n}) => (\n  <Layout>\n    <SEO title={`Category: ${category} | ${website.titleAlt}`} pathname={location.pathname} />\n    <Header />\n    <Hero>\n      <Wrapper>\n        <Headline>Category</Headline>\n        <h1>{category}</h1>\n      </Wrapper>\n    </Hero>\n    <CatWrapper id={website.skipNavId}>\n      <Title style={{ marginTop: '4rem' }}>\n        {totalCount} {totalCount === 1 ? 'Post' : 'Posts'} {totalCount === 1 ? 'was' : 'were'} tagged with \"{category}\"\n      </Title>\n      <Listing posts={nodes} />\n    </CatWrapper>\n  </Layout>\n)\n\nexport default Category\n\nCategory.propTypes = {\n  pageContext: PropTypes.shape({\n    category: PropTypes.string.isRequired,\n  }).isRequired,\n  data: PropTypes.shape({\n    posts: PropTypes.shape({\n      nodes: PropTypes.array.isRequired,\n      totalCount: PropTypes.number.isRequired,\n    }).isRequired,\n  }).isRequired,\n  location: PropTypes.object.isRequired,\n}\n\nexport const pageQuery = graphql`\n  query CategoryPage($category: String!) {\n    posts: allPrismicPost(\n      sort: { fields: [data___date], order: DESC }\n      filter: {\n        data: {\n          categories: { elemMatch: { category: { document: { elemMatch: { data: { name: { eq: $category } } } } } } }\n        }\n      }\n    ) {\n      totalCount\n      nodes {\n        uid\n        data {\n          title {\n            text\n          }\n          date(formatString: \"DD.MM.YYYY\")\n          categories {\n            category {\n              document {\n                data {\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}